{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ApiService/ApiService.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","value","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","styles","this","SearchForm","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","openModal","map","el","onClick","src","largeImageURL","id","webformatURL","alt","ImageGallery","hits","toggleModal","Button","incrementPage","scrollingRef","useRef","ref","Loader","loader","color","height","width","timeout","React","modalRoot","document","querySelector","Modal","handleKeyDown","code","target","window","addEventListener","removeEventListener","data","img","createPortal","Overlay","fetchApi","q","page","BASE_URL","fetch","then","r","json","App","searchValue","status","showModal","largeImage","largeImgData","onPushImagesToState","prevState","onSubmitForm","getData","onLoadMore","setTimeout","current","scrollIntoView","behavior","catch","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a8674b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3NWk1\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1Q3oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__8p-Tn\",\"Modal\":\"Modal_Modal__PeHcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3OTC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__19KI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3kifM\"};","import {Component} from 'react';\r\nimport styles from './Searchbar.module.css';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n      value: '',\r\n     }\r\n\r\n     handleChange = e => {\r\n    this.setState({\r\n      value: e.currentTarget.value,\r\n    })\r\n  \r\n  };\r\n\r\n    handleSubmit = e => {\r\n  e.preventDefault();\r\n  if(this.state.value.trim() === ''){\r\n    return toast.error(\"Type data for search!\");\r\n    \r\n  }\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n\r\n     render () {\r\n         return (\r\n<header className={styles.Searchbar}>\r\n  <form onSubmit={this.handleSubmit} className={styles.SearchForm} >\r\n    <button type=\"submit\" className={styles[`SearchForm-button`]}>\r\n      <span className={styles[`SearchForm-button-label`]}>Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className={styles[`SearchForm-input`]}\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n      value={this.state.value}\r\n      onChange={e => {\r\n        this.handleChange(e)\r\n      }}\r\n    />\r\n  </form>\r\n</header>\r\n)\r\n}\r\n};\r\n\r\n","import styles from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, openModal }) => {\r\n  return images.map(el => (\r\n    <li\r\n      key={el.id}\r\n      className={styles['ImageGalleryItem']}\r\n      onClick={() => {\r\n        openModal({ src: el.largeImageURL, id: el.id });\r\n      }}\r\n    >\r\n      <img\r\n        className={styles['ImageGalleryItem-image']}\r\n        src={el.webformatURL}\r\n        alt={el.id}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ hits, toggleModal }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      <ImageGalleryItem images={hits} openModal={toggleModal} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  hits: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React, { useRef } from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ incrementPage }) => {\r\n  const scrollingRef = useRef();\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        incrementPage(scrollingRef);\r\n      }}\r\n      className={styles.Button}\r\n      ref={scrollingRef}\r\n      type=\"button\"\r\n    >\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  incrementPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport LoaderElement from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\n\r\nexport default class Loader extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <LoaderElement\r\n        className = {styles.loader}\r\n        type=\"Grid\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={1000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.toggleModal();\r\n    }\r\n    if (e.target === e.currentTarget) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const data = this.props.img;\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleKeyDown}>\r\n        <Loader />\r\n        <div className={styles.Modal}>\r\n          <img src={data.src} alt={data.id} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","function fetchApi(q, page) {\r\n    const KEY = 'key=23877606-1096bee22002de3079c9510e6';\r\n    const BASE_URL = `https://pixabay.com/api/?q=${q}&page=${page}&${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    const fetchData = fetch(BASE_URL).then(r => r.json());\r\n    return fetchData;\r\n    \r\n  }\r\n  \r\n\r\n  export default fetchApi;","import React from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport fetchApi from './components/ApiService/ApiService';\n\nclass App extends React.Component {\n  state = {\n    page: 1,\n    images: [],\n    searchValue: '',\n    status: 'idle',\n    showModal: false,\n    largeImageURL: {},\n    error: '',\n  };\n\n  componentDidMount() {\n    this.setState({ status: 'pending' });\n  }\n\n  toggleModal = largeImage => {\n    const largeImgData = largeImage ? largeImage : {};\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImageURL: largeImgData,\n    }));\n  };\n\n  getData(q, page) {\n    fetchApi(q, page)\n      .then(images => this.onPushImagesToState(images))\n      .catch(error => this.setState({ error: error }));\n  }\n\n  onPushImagesToState = images => {\n    this.setState(prevState => ({\n      status: 'resolved',\n      images: [...prevState.images, ...images.hits],\n    }));\n  };\n\n  onSubmitForm = value => {\n    if (value.trim() === '') return;\n    if (value === this.state.searchValue) return;\n    this.setState({\n      status: 'pending',\n      images: [],\n      searchValue: value,\n      page: 1,\n    });\n    this.getData(value, this.state.page);\n  };\n\n  onLoadMore = ref => {\n    const { searchValue, page } = this.state;\n    this.setState(prevState => ({\n      status: 'pending',\n      page: prevState.page + 1,\n    }));\n    this.getData(searchValue, page + 1);\n    setTimeout(() => {\n      ref.current.scrollIntoView({ behavior: 'smooth' });\n    }, 500);\n  };\n\n  render() {\n    const { images, status, showModal, largeImageURL, searchValue } =\n      this.state;\n    return (\n      <div className=\"App\">\n        {showModal && (\n          <Modal img={largeImageURL} toggleModal={this.toggleModal} />\n        )}\n        <Searchbar onSubmit={this.onSubmitForm} />\n        {status === 'pending' && <Loader />}\n        {searchValue.trim() === '' && (\n          <h2 className=\"title\">Введите запрос в поиск</h2>\n        )}\n        {images.length > 0 && (\n          <ImageGallery hits={images} toggleModal={this.toggleModal} />\n        )}\n        {images.length > 0 && <Button incrementPage={this.onLoadMore} />}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1yKEF\",\"SearchForm\":\"Searchbar_SearchForm__4w_4z\",\"SearchForm-button\":\"Searchbar_SearchForm-button__2ICzL\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2TSU3\",\"SearchForm-input\":\"Searchbar_SearchForm-input__lTGLk\"};"],"sourceRoot":""}